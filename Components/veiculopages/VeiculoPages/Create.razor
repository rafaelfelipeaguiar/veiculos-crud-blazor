@page "/veiculos/create"

@using atividade_veiculos.Services
@inject VeiculoService VeiculoService
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h3>Cadastrar Veículo</h3>

<hr />
<div class="row justify-content-center">
    <div class="col-md-4">
        <EditForm Model="veiculo" OnValidSubmit="AddVeiculo" FormName="veiculo-create">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />

            <div class="mb-3">
                <label for="placa" class="form-label">Placa:</label>
                <InputText id="placa" @bind-Value="veiculo.Placa" class="form-control" />
                <ValidationMessage For="() => veiculo.Placa" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="anofabricacaomodelo" class="form-label">Ano de Fabricação/Modelo:</label>
                <InputText id="anofabricacaomodelo" @bind-Value="veiculo.AnoFabricacaoModelo" class="form-control" />
                <ValidationMessage For="() => veiculo.AnoFabricacaoModelo" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="modelo" class="form-label">Modelo:</label>
                <InputText id="modelo" @bind-Value="veiculo.Modelo" class="form-control" />
                <ValidationMessage For="() => veiculo.Modelo" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="chassis" class="form-label">Chassis:</label>
                <InputText id="chassis" @bind-Value="veiculo.Chassis" class="form-control" />
                <ValidationMessage For="() => veiculo.Chassis" class="text-danger" />
            </div>

            <div class="mb-3">
                <label for="renavamveiculo" class="form-label">Renavam:</label>
                <InputText id="renavamveiculo" @bind-Value="veiculo.RenavamVeiculo" class="form-control" />
                <ValidationMessage For="() => veiculo.RenavamVeiculo" class="text-danger" />
            </div>

            <div>
                <label for="idmarca" class="form-label">Marca:</label>
                <InputSelect id="marca" @bind-Value="veiculo.IdMarca" class="form-control">
                    <option value="">Selecione uma Marca</option>
                    @foreach (var marca in marcas)
                    {
                        <option value="@marca.IdMarca">@marca.NomeMarca</option>
                    }
                </InputSelect>
            </div>

            <div>
                <label for="idcor" class="form-label">Cor:</label>
                <InputSelect id="cor" @bind-Value="veiculo.IdCor" class="form-control">
                    <option value="">Selecione uma Cor</option>
                    @foreach (var cor in cores)
                    {
                        <option value="@cor.IdCor">@cor.NomeCor</option>
                    }
                </InputSelect>
            </div>

            <button type="submit" class="btn btn-primary">Salvar</button>
        </EditForm>
    </div>
</div>

@code {
    private Veiculo veiculo = new Veiculo();
    private List<Marca> marcas = new List<Marca>();
    private List<Cor> cores = new List<Cor>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Carregar marcas e cores do backend
            marcas = await VeiculoService.GetMarcas();
            cores = await VeiculoService.GetCores();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao carregar marcas e cores: {ex.Message}");
        }
    }

    private async Task AddVeiculo()
    {
        try
        {
            await VeiculoService.AddVeiculo(veiculo);
            NavigationManager.NavigateTo("/veiculos");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Erro ao adicionar veículo: {ex.Message}");
        }
    }

}
